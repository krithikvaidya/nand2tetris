// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=load, sel[0]=address[13], sel[1]=address[12], a=regset0, b=regset1, c=regset2, d=regset3);

    RAM4K(in=in, load=regset0, address = address[0..11], out=outset0);
    RAM4K(in=in, load=regset1, address = address[0..11], out=outset1);
    RAM4K(in=in, load=regset2, address = address[0..11], out=outset2);
    RAM4K(in=in, load=regset3, address = address[0..11], out=outset3);

    Mux4Way16(a=outset0, b=outset1, c=outset2, d=outset3, sel[0]=address[13], sel[1]=address[12], out=out);
}